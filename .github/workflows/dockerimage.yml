name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  watch:
    types: [started]

jobs:

  build:
    runs-on: ubuntu-latest
    name: build and publish
    steps:

    - uses: actions/checkout@master

    # Azure setup
    - name: Azure Docker Login
      uses: Azure/docker-login@v1
      with:
        login-server: ${{ secrets.DOCKER_CONTAINER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }} 
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Setup Azure Aks Context
      uses: Azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: SpringCluster
        resource-group: ResourceGroup

    - name: Create Azure Aks Secret
      uses: Azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ secrets.DOCKER_CONTAINER_REGISTRY }}
        container-registry-username: ${{ secrets.DOCKER_USERNAME }} 
        container-registry-password: ${{ secrets.DOCKER_PASSWORD }}
        secret-name: my-k8s-secret


    # spring-boot-app
    - name: Build & Push spring-boot-app image to Azure Container Registry
      run: |
        docker build . --file Dockerfile --tag ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/spring-boot-app:latest
        docker tag ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/spring-boot-app:latest ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/spring-boot-app:$(date +%s)
        docker push ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/spring-boot-app      
      
    - name: Deploy spring-boot-app Cluster on Azure Kubernetes
      uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/app-deployment.yml
        images: |
          ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/spring-boot-app
        imagepullsecrets: |
          my-k8s-secret
                   
    - name: Deploy spring-boot-app Service on Azure Kubernetes
      uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/app-service.yml


    # kong
    - name: Build & Push kong image to Azure Container Registry
      run: |
        docker build . --file kong/Dockerfile --tag ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/kong:latest
        docker tag ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/kong:latest ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/kong:$(date +%s)
        docker push ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/kong
          
    - name: Deploy kong Core Proxy on Azure Kubernetes
      uses: Azure/k8s-deploy@v1
      with:
        namespace: kong
        manifests: |
          manifests/kong-dbless-mandatory.yml
        images: |
          ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/kong
        imagepullsecrets: |
          my-k8s-secret
          
    - name: Deploy kong Cluster on Azure Kubernetes
      uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/kong-deployment.yml
        images: |
          ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/kong
        imagepullsecrets: |
          my-k8s-secret
          
    - name: Deploy kong Service on Azure Kubernetes
      uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/kong-service.yml
          
          
    # nginx-ingress-controller
    - name: Deploy Nginx Ingress Controller on Azure Kubernetes
      uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/nginx-ingress-controller.yml
          manifests/nginx-mandatory.yml
          
    - name: Deploy Nginx Ingress Routes on Azure Kubernetes
      uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/nginx-ingress-routes.yml
